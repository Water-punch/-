{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SamSung\\\\Desktop\\\\\\uC5D8\\uB9AC\\uC2A4\\uD2B8\\uB799\\\\1\\uCC28\\uD504\\uB85C\\uC81D\\uD2B8\\\\testgit\\\\front\\\\src\\\\components\\\\features\\\\award\\\\AwardEditForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\nimport * as Api from \"../../../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AwardEditForm(_ref) {\n  _s();\n\n  let {\n    currentAward,\n    setAwards,\n    setIsEditing\n  } = _ref;\n  //useState로 title 상태를 생성함.\n  const [title, setTitle] = useState(currentAward.title); //useState로 description 상태를 생성함.\n\n  const [description, setDescription] = useState(currentAward.description);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    e.stopPropagation(); // currentAward의 user_id를 user_id 변수에 할당함.\n\n    const user_id = currentAward.user_id; // \"awards/수상 id\" 엔드포인트로 PUT 요청함.\n\n    await Api.put(`awards/${currentAward.id}`, {\n      user_id,\n      title,\n      description\n    }); // \"awardlist/유저id\" 엔드포인트로 GET 요청함.\n\n    const res = await Api.get(\"awardlist\", user_id); // awards를 response의 data로 세팅함.\n\n    setAwards(res.data); // 편집 과정이 끝났으므로, isEditing을 false로 세팅함.\n\n    setIsEditing(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicTitle\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\\uC218\\uC0C1\\uB0B4\\uC5ED\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicDescription\",\n      className: \"mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\\uC0C1\\uC138\\uB0B4\\uC5ED\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      as: Row,\n      className: \"mt-3 text-center mb-4\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        sm: {\n          span: 20\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          className: \"me-3\",\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: () => setIsEditing(false),\n          children: \"\\uCDE8\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AwardEditForm, \"Jeg5BAC3RkRRXVLHHtKhuIgYkL8=\");\n\n_c = AwardEditForm;\nexport default AwardEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AwardEditForm\");","map":{"version":3,"sources":["C:/Users/SamSung/Desktop/엘리스트랙/1차프로젝트/testgit/front/src/components/features/award/AwardEditForm.js"],"names":["React","useState","Button","Form","Col","Row","Api","AwardEditForm","currentAward","setAwards","setIsEditing","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","stopPropagation","user_id","put","id","res","get","data","target","value","span"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,GAA5B,QAAuC,iBAAvC;AACA,OAAO,KAAKC,GAAZ,MAAqB,cAArB;;;AAEA,SAASC,aAAT,OAAkE;AAAA;;AAAA,MAA3C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,GAA2C;AAChE;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACO,YAAY,CAACG,KAAd,CAAlC,CAFgE,CAGhE;;AACA,QAAM,CAACE,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAACO,YAAY,CAACK,WAAd,CAA9C;;AAEA,QAAME,YAAY,GAAG,MAAOC,CAAP,IAAa;AAChCA,IAAAA,CAAC,CAACC,cAAF;AACAD,IAAAA,CAAC,CAACE,eAAF,GAFgC,CAIhC;;AACA,UAAMC,OAAO,GAAGX,YAAY,CAACW,OAA7B,CALgC,CAOhC;;AACA,UAAMb,GAAG,CAACc,GAAJ,CAAS,UAASZ,YAAY,CAACa,EAAG,EAAlC,EAAqC;AACzCF,MAAAA,OADyC;AAEzCR,MAAAA,KAFyC;AAGzCE,MAAAA;AAHyC,KAArC,CAAN,CARgC,CAchC;;AACA,UAAMS,GAAG,GAAG,MAAMhB,GAAG,CAACiB,GAAJ,CAAQ,WAAR,EAAqBJ,OAArB,CAAlB,CAfgC,CAgBhC;;AACAV,IAAAA,SAAS,CAACa,GAAG,CAACE,IAAL,CAAT,CAjBgC,CAkBhC;;AACAd,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GApBD;;AAsBA,sBACE,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEK,YAAhB;AAAA,4BACE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,gBAAtB;AAAA,6BACE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,KAAK,EAAEJ,KAHT;AAIE,QAAA,QAAQ,EAAGK,CAAD,IAAOJ,QAAQ,CAACI,CAAC,CAACS,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,sBAAtB;AAA6C,MAAA,SAAS,EAAC,MAAvD;AAAA,6BACE,QAAC,IAAD,CAAM,OAAN;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,0BAFd;AAGE,QAAA,KAAK,EAAEb,WAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,cAAc,CAACE,CAAC,CAACS,MAAF,CAASC,KAAV;AAJjC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAVF,eAmBE,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,EAAE,EAAErB,GAAhB;AAAqB,MAAA,SAAS,EAAC,uBAA/B;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAEsB,UAAAA,IAAI,EAAE;AAAR,SAAT;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,IAAI,EAAC,QAA/B;AAAwC,UAAA,SAAS,EAAC,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,WAAhB;AAA4B,UAAA,OAAO,EAAE,MAAMjB,YAAY,CAAC,KAAD,CAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgCD;;GA5DQH,a;;KAAAA,a;AA8DT,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, Col, Row } from \"react-bootstrap\";\r\nimport * as Api from \"../../../api\";\r\n\r\nfunction AwardEditForm({ currentAward, setAwards, setIsEditing }) {\r\n  //useState로 title 상태를 생성함.\r\n  const [title, setTitle] = useState(currentAward.title);\r\n  //useState로 description 상태를 생성함.\r\n  const [description, setDescription] = useState(currentAward.description);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n\r\n    // currentAward의 user_id를 user_id 변수에 할당함.\r\n    const user_id = currentAward.user_id;\r\n\r\n    // \"awards/수상 id\" 엔드포인트로 PUT 요청함.\r\n    await Api.put(`awards/${currentAward.id}`, {\r\n      user_id,\r\n      title,\r\n      description,\r\n    });\r\n\r\n    // \"awardlist/유저id\" 엔드포인트로 GET 요청함.\r\n    const res = await Api.get(\"awardlist\", user_id);\r\n    // awards를 response의 data로 세팅함.\r\n    setAwards(res.data);\r\n    // 편집 과정이 끝났으므로, isEditing을 false로 세팅함.\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Form.Group controlId=\"formBasicTitle\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"수상내역\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicDescription\" className=\"mt-3\">\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"상세내역\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row} className=\"mt-3 text-center mb-4\">\r\n        <Col sm={{ span: 20 }}>\r\n          <Button variant=\"primary\" type=\"submit\" className=\"me-3\">\r\n            확인\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={() => setIsEditing(false)}>\r\n            취소\r\n          </Button>\r\n        </Col>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n\r\nexport default AwardEditForm;\r\n"]},"metadata":{},"sourceType":"module"}