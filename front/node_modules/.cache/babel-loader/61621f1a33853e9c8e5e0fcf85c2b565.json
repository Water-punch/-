{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SamSung\\\\Desktop\\\\\\uC5D8\\uB9AC\\uC2A4\\uD2B8\\uB799\\\\1\\uCC28\\uD504\\uB85C\\uC81D\\uD2B8\\\\testgit\\\\front\\\\src\\\\pages\\\\MyPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Col, Row, Navbar, Nav } from \"react-bootstrap\";\nimport { UserStateContext } from \"../App\";\nimport * as Api from \"../api\";\nimport User from \"../components/features/user/User\";\nimport Educations from './Educations';\nimport Awards from \"./Awards\";\nimport Certificates from \"./Certificates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MyPage() {\n  _s();\n\n  var _userState$user, _userState$user2, _userState$user3, _userState$user4;\n\n  const navigate = useNavigate();\n  const params = useParams(); // useState 훅을 통해 portfolioOwner 상태를 생성함.\n\n  const [portfolioOwner, setPortfolioOwner] = useState(null); // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n  const userState = useContext(UserStateContext);\n\n  const fetchPorfolioOwner = async ownerId => {\n    // 유저 id를 가지고 \"/users/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n    const res = await Api.get(\"users\", ownerId); // 사용자 정보는 response의 data임.\n\n    const ownerData = res.data; // portfolioOwner을 해당 사용자 정보로 세팅함.\n\n    setPortfolioOwner(ownerData); // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n\n    setIsFetchCompleted(true);\n  };\n\n  useEffect(() => {\n    // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n    if (!userState.user) {\n      navigate(\"/login\", {\n        replace: true\n      });\n      return;\n    }\n\n    if (params.userId) {\n      // 만약 현재 URL이 \"/users/:userId\" 라면, 이 userId를 유저 id로 설정함.\n      const ownerId = params.userId; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    } else {\n      // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n      const ownerId = userState.user.id; // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n\n      fetchPorfolioOwner(ownerId);\n    }\n  }, [params, userState, navigate]);\n\n  if (!isFetchCompleted) {\n    return \"loading...\";\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      className: \"navbar\",\n      expand: \"xl\",\n      bg: \"light\",\n      sticky: \"top\",\n      placement: \"end\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n          onClick: () => navigate(\"/\"),\n          children: [\" \", portfolioOwner.name, \"\\uC758 \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624 \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Toggle, {\n          \"aria-controls\": \"navbar-nav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n          id: \"navbar-nav\",\n          children: /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"justify-content-end flex-grow-1 pe-3\",\n            children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/\",\n              children: \" \\uD504\\uB85C\\uC81D\\uD2B8 \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"/\",\n              id: \"profile\",\n              children: \"\\uAC1C\\uC778 \\uC774\\uB825\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"3\",\n        lg: \"3\",\n        children: /*#__PURE__*/_jsxDEV(User, {\n          portfolioOwnerId: portfolioOwner.id,\n          isEditable: portfolioOwner.id === ((_userState$user = userState.user) === null || _userState$user === void 0 ? void 0 : _userState$user.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Educations, {\n          portfolioOwnerId: portfolioOwner.id,\n          isEditable: portfolioOwner.id === ((_userState$user2 = userState.user) === null || _userState$user2 === void 0 ? void 0 : _userState$user2.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Awards, {\n          portfolioOwnerId: portfolioOwner.id,\n          isEditable: portfolioOwner.id === ((_userState$user3 = userState.user) === null || _userState$user3 === void 0 ? void 0 : _userState$user3.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Certificates, {\n          portfolioOwnerId: portfolioOwner.id,\n          isEditable: portfolioOwner.id === ((_userState$user4 = userState.user) === null || _userState$user4 === void 0 ? void 0 : _userState$user4.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyPage, \"ozN5wJsbZI17qb28PSn+j5/v+Ps=\", false, function () {\n  return [useNavigate, useParams];\n});\n\n_c = MyPage;\nexport default MyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"sources":["C:/Users/SamSung/Desktop/엘리스트랙/1차프로젝트/testgit/front/src/pages/MyPage.js"],"names":["React","useContext","useState","useEffect","useNavigate","useParams","Container","Col","Row","Navbar","Nav","UserStateContext","Api","User","Educations","Awards","Certificates","MyPage","navigate","params","portfolioOwner","setPortfolioOwner","isFetchCompleted","setIsFetchCompleted","userState","fetchPorfolioOwner","ownerId","res","get","ownerData","data","user","replace","userId","id","name"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { Container, Col, Row,  Navbar, Nav } from \"react-bootstrap\";\n\nimport { UserStateContext } from \"../App\";\nimport * as Api from \"../api\";\nimport User from \"../components/features/user/User\";\nimport Educations from './Educations';\nimport Awards from \"./Awards\";\nimport Certificates from \"./Certificates\";\n\n\nfunction MyPage() {\n  const navigate = useNavigate();\n  const params = useParams();\n  // useState 훅을 통해 portfolioOwner 상태를 생성함.\n  const [portfolioOwner, setPortfolioOwner] = useState(null);\n  // fetchPorfolioOwner 함수가 완료된 이후에만 (isFetchCompleted가 true여야) 컴포넌트가 구현되도록 함.\n  // 아래 코드를 보면, isFetchCompleted가 false이면 \"loading...\"만 반환되어서, 화면에 이 로딩 문구만 뜨게 됨.\n  const [isFetchCompleted, setIsFetchCompleted] = useState(false);\n  const userState = useContext(UserStateContext);\n\n  const fetchPorfolioOwner = async (ownerId) => {\n    // 유저 id를 가지고 \"/users/유저id\" 엔드포인트로 요청해 사용자 정보를 불러옴.\n    const res = await Api.get(\"users\", ownerId);\n    // 사용자 정보는 response의 data임.\n    const ownerData = res.data;\n    // portfolioOwner을 해당 사용자 정보로 세팅함.\n    setPortfolioOwner(ownerData);\n    // fetchPorfolioOwner 과정이 끝났으므로, isFetchCompleted를 true로 바꿈.\n    setIsFetchCompleted(true);\n  };\n\n  useEffect(() => {\n    // 전역 상태의 user가 null이라면 로그인이 안 된 상태이므로, 로그인 페이지로 돌림.\n    if (!userState.user) {\n      navigate(\"/login\", { replace: true });\n      return;\n    }\n\n    if (params.userId) {\n      // 만약 현재 URL이 \"/users/:userId\" 라면, 이 userId를 유저 id로 설정함.\n      const ownerId = params.userId;\n      // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n      fetchPorfolioOwner(ownerId);\n    } else {\n      // 이외의 경우, 즉 URL이 \"/\" 라면, 전역 상태의 user.id를 유저 id로 설정함.\n      const ownerId = userState.user.id;\n      // 해당 유저 id로 fetchPorfolioOwner 함수를 실행함.\n      fetchPorfolioOwner(ownerId);\n    }\n  }, [params, userState, navigate]);\n\n  if (!isFetchCompleted) {\n    return \"loading...\";\n  }\n\n  return (\n    <Container fluid>\n     <Navbar className=\"navbar\" expand=\"xl\" bg=\"light\" sticky=\"top\" placement=\"end\">\n  <Container>\n    <Navbar.Brand onClick={() => navigate(\"/\")}> {portfolioOwner.name}의 포트폴리오 </Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"navbar-nav\" />\n    <Navbar.Collapse id=\"navbar-nav\">\n      <Nav className=\"justify-content-end flex-grow-1 pe-3\">\n        <Nav.Link href=\"/\"> 프로젝트 </Nav.Link>\n        <Nav.Link href=\"/\" id=\"profile\" >개인 이력</Nav.Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Container>\n</Navbar>\n\n      <Row>\n        <Col md=\"3\" lg=\"3\">\n          <User\n            portfolioOwnerId={portfolioOwner.id}\n            isEditable={portfolioOwner.id === userState.user?.id}\n          />\n        </Col>\n        <Col>\n        <Educations\n            portfolioOwnerId={portfolioOwner.id}\n            isEditable={portfolioOwner.id === userState.user?.id}\n          />\n\n        <Awards\n            portfolioOwnerId={portfolioOwner.id}\n            isEditable={portfolioOwner.id === userState.user?.id}\n          />\n\n        <Certificates\n            portfolioOwnerId={portfolioOwner.id}\n            isEditable={portfolioOwner.id === userState.user?.id}\n          />\n        </Col>\n        \n        \n      </Row>\n    </Container>\n  );\n}\n\nexport default MyPage;\n"]},"metadata":{},"sourceType":"module"}