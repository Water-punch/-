{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SamSung\\\\Desktop\\\\\\uC5D8\\uB9AC\\uC2A4\\uD2B8\\uB799\\\\1\\uCC28\\uD504\\uB85C\\uC81D\\uD2B8\\\\testgit\\\\front\\\\src\\\\pages\\\\Educations.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport * as Api from \"../api\";\nimport { Education, EducationAddForm } from \"../components/features/education\";\nimport Btn from \"../components/common/btn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Educations(_ref) {\n  _s();\n\n  let {\n    portfolioOwnerId,\n    isEditable\n  } = _ref;\n  const [educations, setEducations] = useState([]);\n  const [isAdding, setIsAdding] = useState(false);\n  const [visible, setVisible] = useState(true);\n  useEffect(() => {\n    // \"educationlist/유저id\"로 GET 요청하고, response의 data로 educations를 세팅함.\n    Api.get(\"educationlist\", portfolioOwnerId).then(res => setEducations(res.data));\n  }, [portfolioOwnerId]);\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"\\uD559\\uB825\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), educations.map(education => /*#__PURE__*/_jsxDEV(Education, {\n        education: education,\n        setEducations: setEducations,\n        isEditable: isEditable\n      }, education.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)), isEditable && /*#__PURE__*/_jsxDEV(Btn, {\n        visible: visible,\n        onButtonClick: toggleVisibility // 버튼 클릭시 visible 상태 토글\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 16\n      }, this), isAdding && visible && /*#__PURE__*/_jsxDEV(EducationAddForm, {\n        portfolioOwnerId: portfolioOwnerId,\n        setEducations: setEducations,\n        setIsAdding: setIsAdding,\n        visible: visible\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Educations, \"x/62sasOgnr+zLOqoZvNoEM41TQ=\");\n\n_c = Educations;\nexport default Educations;\n\nvar _c;\n\n$RefreshReg$(_c, \"Educations\");","map":{"version":3,"sources":["C:/Users/SamSung/Desktop/엘리스트랙/1차프로젝트/testgit/front/src/pages/Educations.js"],"names":["React","useEffect","useState","Card","Api","Education","EducationAddForm","Btn","Educations","portfolioOwnerId","isEditable","educations","setEducations","isAdding","setIsAdding","visible","setVisible","get","then","res","data","toggleVisibility","map","education","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB;AACA,SAAQC,SAAR,EAAmBC,gBAAnB,QAA0C,kCAA1C;AACA,OAAOC,GAAP,MAAgB,0BAAhB;;;AAEA,SAASC,UAAT,OAAoD;AAAA;;AAAA,MAAhC;AAACC,IAAAA,gBAAD;AAAmBC,IAAAA;AAAnB,GAAgC;AAEhD,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAEW,QAAF,EAAYC,WAAZ,IAA4BZ,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAAEa,OAAF,EAAWC,UAAX,IAAyBd,QAAQ,CAAC,IAAD,CAAvC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAG,IAAAA,GAAG,CAACa,GAAJ,CAAQ,eAAR,EAAyBR,gBAAzB,EAA2CS,IAA3C,CAAiDC,GAAD,IAASP,aAAa,CAACO,GAAG,CAACC,IAAL,CAAtE;AACH,GAHQ,EAGN,CAACX,gBAAD,CAHM,CAAT;;AAKA,QAAMY,gBAAgB,GAAG,MAAM;AAC3BL,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFH;;AAIA,sBACI,QAAC,IAAD;AAAA,2BACI,QAAC,IAAD,CAAM,IAAN;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAECJ,UAAU,CAACW,GAAX,CAAgBC,SAAD,iBACZ,QAAC,SAAD;AAEA,QAAA,SAAS,EAAEA,SAFX;AAGA,QAAA,aAAa,EAAEX,aAHf;AAIA,QAAA,UAAU,EAAEF;AAJZ,SACKa,SAAS,CAACC,EADf;AAAA;AAAA;AAAA;AAAA,cADH,CAFD,EAUCd,UAAU,iBACR,QAAC,GAAD;AACC,QAAA,OAAO,EAAEK,OADV;AAEC,QAAA,aAAa,EAAEM,gBAFhB,CAEkC;;AAFlC;AAAA;AAAA;AAAA;AAAA,cAXH,EAgBCR,QAAQ,IAAIE,OAAZ,iBACG,QAAC,gBAAD;AACA,QAAA,gBAAgB,EAAEN,gBADlB;AAEA,QAAA,aAAa,EAAEG,aAFf;AAGA,QAAA,WAAW,EAAEE,WAHb;AAIA,QAAA,OAAO,EAAIC;AAJX;AAAA;AAAA;AAAA;AAAA,cAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA5CQP,U;;KAAAA,U;AA8CT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport * as Api from \"../api\";\r\nimport {Education, EducationAddForm} from \"../components/features/education\";\r\nimport Btn from \"../components/common/btn\";\r\n\r\nfunction Educations({portfolioOwnerId, isEditable}) {\r\n\r\n    const [ educations, setEducations ] = useState([]);\r\n    const [ isAdding, setIsAdding ] = useState(false);\r\n    const [ visible, setVisible] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // \"educationlist/유저id\"로 GET 요청하고, response의 data로 educations를 세팅함.\r\n        Api.get(\"educationlist\", portfolioOwnerId).then((res) => setEducations(res.data));\r\n    }, [portfolioOwnerId]);\r\n\r\n    const toggleVisibility = () => {\r\n        setVisible(!visible);\r\n      };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n            <Card.Title>학력</Card.Title>\r\n            {educations.map((education) => (\r\n                <Education\r\n                key={education.id}\r\n                education={education}\r\n                setEducations={setEducations}\r\n                isEditable={isEditable}\r\n                />\r\n            ))}\r\n            {isEditable && \r\n            (  <Btn\r\n                visible={visible}\r\n                onButtonClick={toggleVisibility} // 버튼 클릭시 visible 상태 토글\r\n              />)\r\n            }\r\n            {isAdding && visible && ( \r\n                <EducationAddForm\r\n                portfolioOwnerId={portfolioOwnerId}\r\n                setEducations={setEducations}\r\n                setIsAdding={setIsAdding}\r\n                visible = {visible}\r\n                />\r\n)}\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Educations;"]},"metadata":{},"sourceType":"module"}